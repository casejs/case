# Warning: This file is used for testing purposes only.
# All entities and properties in this files are used somewhere in the e2e tests.
#
# Please do not modify it unless you know what you are doing.

name: 'mock-backend-for-e2e-tests'
entities:
  Owner:
    properties:
      - name
      - { name: email, type: email }

  # Testing all property types and their validation with the Dog entity.
  Dog:
    properties:
      - name
      - { name: description, type: text }
      - { name: age, type: number }
      - { name: website, type: link }
      - { name: price, type: money, options: { currency: EUR } }
      - { name: birthdate, type: date }
      - { name: isGoodBoy, type: boolean }
      - { name: acquiredAt, type: timestamp }
      - { name: password, type: password }
      - { name: email, type: email }
      - {
          name: favoriteToy,
          type: choice,
          options: { values: [ball, bone, frisbee] }
        }
      - { name: location, type: location }
      - { name: certificate, type: file }
      - { name: photo, type: image }

    belongsTo:
      - Owner

  # Testing policies with the Bird entity.
  Bird:
    properties:
      - name
    policies:
      read:
        # Only for Users and contributors.
        - { access: restricted, allow: [User, Contributor] }
      create:
        # Only for logged as authenticable entity.
        - access: restricted
      update:
        # Only for Users.
        - { access: restricted, allow: User }
      delete:
        # Impossible logic to test multiple rules
        - { access: restricted, allow: [Contributor] }
        - { access: restricted, allow: [User] }

  # Testing policies with the Cat entity.
  Cat:
    properties:
      - name
      - { name: age, type: number }
      - { name: birthdate, type: date }
      - { name: hiddenProp, type: boolean, hidden: true }
    policies:
      create:
        - access: üîí # Restricted to logged in users.
      read:
        - access: üåê # Public.
      update:
        - access: forbidden
      delete:
        - { access: üö´ } # Forbidden

  # Testing policies with the Snake entity.
  Snake:
    authenticable: true
    properties:
      - name
    policies:
      read:
        - access: admin
      signup:
        - access: üö´

  # Testing authenticable entities with the User and Contributor entities.
  User:
    authenticable: true
    properties:
      - name

  Contributor:
    authenticable: true
    properties:
      - name

  # Testing validation with the Car and SuperUser entity.
  Car:
    properties:
      - model
      - brand
      - { name: year, type: number, validation: { min: 2000 } }
    validation:
      model: { contains: 'turbo' }
      brand: { minLength: 3, maxLength: 20 }
      year: { min: 2023, max: 2024, isOptional: true }

  SuperUser:
    authenticable: true
    properties:
      - { name: name, type: string, validation: { required: true } }
      - {
          name: propWithInactiveFilters,
          type: string,
          validation:
            {
              isEmpty: false,
              isNotEmpty: false,
              required: false,
              isDefined: false,
              isAlpha: false,
              isAlphanumeric: false,
              isAscii: false,
              isEmail: false,
              isJSON: false
            }
        }

  # Testing relationships with the Post, Author, and Tags entities.
  Post:
    properties:
      - title
      - { name: content, type: text }
    belongsTo:
      - Author
    belongsToMany:
      - Tag

  Note:
    properties:
      - title
    belongsTo:
      - { name: author, entity: Author, eager: true }

  Tweet:
    properties:
      - text
    belongsToMany:
      - { name: customTagNames, entity: Tag, eager: true }

  Author:
    properties:
      - name
    belongsTo:
      - University

  University:
    properties:
      - name

  Tag:
    properties:
      - name

  # Testing uploads
  Company:
    properties:
      - name
      - {
          name: logo,
          type: image,
          options:
            {
              sizes:
                {
                  small: { width: 100, height: 100 },
                  medium: { width: 200, height: 200 },
                  large: { width: 300, height: 300 }
                }
            }
        }
      - { name: document, type: file }

    # Testing single entity with the ContactPage entity.
  ContactPage:
    single: true
    nameSingular: Contact
    slug: contact
    properties:
      - { name: title, type: string }
      - { name: content, type: text }
    validation:
      title: { required: true }

    # Testing single entity with the ContactPage entity.
  AboutPage:
    single: true
    nameSingular: About content
    slug: about-content
    properties:
      - { name: title, type: string }
      - { name: content, type: text }
    validation:
      title: { required: true }
